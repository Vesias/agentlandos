#!/bin/bash

# AGENT_LAND_SAARLAND - Vercel Deployment Helper
# ==============================================

echo "üöÄ AGENT_LAND_SAARLAND - Deployment Vorbereitung"
echo "=============================================="

# Schritt 1: √úberpr√ºfe Node.js Version
echo "üìå √úberpr√ºfe Node.js Version..."
node_version=$(node -v)
if [[ ! $node_version =~ ^v18\.|^v20\. ]]; then
    echo "‚ùå Node.js 18+ wird ben√∂tigt. Aktuelle Version: $node_version"
    exit 1
fi
echo "‚úÖ Node.js Version: $node_version"

# Schritt 2: Installiere Dependencies
echo "üì¶ Installiere Dependencies..."
if command -v pnpm &> /dev/null; then
    echo "‚úÖ Verwende pnpm..."
    pnpm install
else
    echo "‚ö†Ô∏è  pnpm nicht gefunden, verwende npm..."
    npm install
fi

# Schritt 3: Erstelle .env Datei wenn nicht vorhanden
if [ ! -f .env ]; then
    echo "üìù Erstelle .env Datei..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Bitte f√ºlle die .env Datei mit den korrekten Werten aus!"
fi

# Schritt 4: Build Test
echo "üî® Teste Build-Prozess..."
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ Build erfolgreich!"
else
    echo "‚ùå Build fehlgeschlagen!"
    exit 1
fi

echo ""
echo "‚ú® Deployment-Vorbereitung abgeschlossen!"
echo ""
echo "N√§chste Schritte:"
echo "1. Stelle sicher, dass alle Umgebungsvariablen in Vercel konfiguriert sind:"
echo "   - OPENAI_API_KEY"
echo "   - DEEPSEEK_API_KEY"
echo "   - DATABASE_URL (PostgreSQL)"
echo "   - REDIS_URL"
echo ""
echo "2. Deploye mit: npx vercel --prod"
echo ""
echo "üåü Viel Erfolg mit AGENT_LAND_SAARLAND!"
